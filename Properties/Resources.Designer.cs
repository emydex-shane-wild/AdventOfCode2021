//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace _2021_AdventOfCode.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("_2021_AdventOfCode.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 149
        ///163
        ///165
        ///160
        ///179
        ///184
        ///186
        ///199
        ///207
        ///210
        ///211
        ///212
        ///228
        ///241
        ///242
        ///265
        ///269
        ///271
        ///287
        ///286
        ///295
        ///296
        ///293
        ///300
        ///301
        ///302
        ///304
        ///308
        ///320
        ///322
        ///321
        ///333
        ///350
        ///345
        ///348
        ///347
        ///351
        ///348
        ///349
        ///345
        ///353
        ///366
        ///376
        ///384
        ///387
        ///390
        ///391
        ///378
        ///382
        ///394
        ///409
        ///411
        ///415
        ///419
        ///424
        ///425
        ///427
        ///428
        ///436
        ///445
        ///446
        ///459
        ///464
        ///478
        ///479
        ///493
        ///492
        ///493
        ///482
        ///484
        ///491
        ///492
        ///497
        ///501
        ///506
        ///509
        ///521
        ///526
        ///527
        ///539
        ///546
        ///547
        ///551
        ///562
        ///567
        ///568
        ///573
        ///590
        ///591
        ///596
        ///612
        ///613
        ///618
        ///620
        ///593
        ///594
        ///596
        ///597
        ///596
        ///612
        ///616
        ///618
        ///62 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Activity1_1_Input {
            get {
                return ResourceManager.GetString("Activity1_1_Input", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to As the submarine drops below the surface of the ocean, it automatically performs a sonar sweep of the nearby sea floor. On a small screen, the sonar sweep report (your puzzle input) appears: each line is a measurement of the sea floor depth as the sweep looks further and further away from the submarine.
        ///
        ///For example, suppose you had the following report:
        ///
        ///199
        ///200
        ///208
        ///210
        ///200
        ///207
        ///240
        ///269
        ///260
        ///263
        ///This report indicates that, scanning outward from the submarine, the sonar sweep found depths of 199 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Activity1_1Message {
            get {
                return ResourceManager.GetString("Activity1-1Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Considering every single measurement isn&apos;t as useful as you expected: there&apos;s just too much noise in the data.
        ///
        ///Instead, consider sums of a three-measurement sliding window. Again considering the above example:
        ///
        ///199  A      
        ///200  A B    
        ///208  A B C  
        ///210    B C D
        ///200  E   C D
        ///207  E F   D
        ///240  E F G  
        ///269    F G H
        ///260      G H
        ///263        H
        ///Start by comparing the first and second three-measurement windows. The measurements in the first window are marked A (199, 200, 208); their sum is 199 + 200 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Activity1_2Message {
            get {
                return ResourceManager.GetString("Activity1-2Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to forward 5
        ///forward 2
        ///forward 9
        ///down 2
        ///forward 9
        ///forward 3
        ///forward 2
        ///down 6
        ///forward 3
        ///forward 3
        ///down 3
        ///down 3
        ///forward 8
        ///down 5
        ///forward 7
        ///forward 9
        ///forward 9
        ///forward 6
        ///forward 9
        ///forward 3
        ///forward 3
        ///forward 1
        ///forward 7
        ///down 6
        ///forward 7
        ///forward 4
        ///down 3
        ///down 1
        ///forward 4
        ///down 7
        ///down 2
        ///down 8
        ///forward 9
        ///down 5
        ///down 2
        ///forward 6
        ///up 4
        ///down 3
        ///down 1
        ///down 6
        ///down 7
        ///forward 6
        ///up 2
        ///forward 2
        ///down 9
        ///down 3
        ///forward 7
        ///up 3
        ///up 7
        ///forward 8
        ///forward 7
        ///down 4
        ///up 8
        ///up 1
        ///forward  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Activity2_1_Input {
            get {
                return ResourceManager.GetString("Activity2_1_Input", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Now, you need to figure out how to pilot this thing.
        ///
        ///It seems like the submarine can take a series of commands like forward 1, down 2, or up 3:
        ///
        ///forward X increases the horizontal position by X units.
        ///down X increases the depth by X units.
        ///up X decreases the depth by X units.
        ///Note that since you&apos;re on a submarine, down and up affect your depth, and so they have the opposite result of what you might expect.
        ///
        ///The submarine seems to already have a planned course (your puzzle input). You should probab [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Activity2_1Message {
            get {
                return ResourceManager.GetString("Activity2-1Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///Based on your calculations, the planned course doesn&apos;t seem to make any sense. You find the submarine manual and discover that the process is actually slightly more complicated.
        ///
        ///In addition to horizontal position and depth, you&apos;ll also need to track a third value, aim, which also starts at 0. The commands also mean something entirely different than you first thought:
        ///
        ///down X increases your aim by X units.
        ///up X decreases your aim by X units.
        ///forward X does two things:
        ///It increases your horizontal p [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Activity2_2Message {
            get {
                return ResourceManager.GetString("Activity2-2Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The selected advent day has at least 1 activity. Please select a number with the range 1 - .
        /// </summary>
        internal static string DayActivitiesMessage {
            get {
                return ResourceManager.GetString("DayActivitiesMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To begin, select a day # within the range of 1 - .
        /// </summary>
        internal static string GettingStartedMessage {
            get {
                return ResourceManager.GetString("GettingStartedMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unfortunately an invalid Activity day was entered..
        /// </summary>
        internal static string InvalidActivityDay {
            get {
                return ResourceManager.GetString("InvalidActivityDay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unfortunately an invalid Advent day was entered..
        /// </summary>
        internal static string InvalidAdventDay {
            get {
                return ResourceManager.GetString("InvalidAdventDay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For some strange reason the activity you selected could not be found..
        /// </summary>
        internal static string LostActivity {
            get {
                return ResourceManager.GetString("LostActivity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For some strange reason the advent day could not be found..
        /// </summary>
        internal static string LostAdventDay {
            get {
                return ResourceManager.GetString("LostAdventDay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unfortunately no Advent days have been registered as yet. Please check back tomorrow..
        /// </summary>
        internal static string MissingAdventDays {
            get {
                return ResourceManager.GetString("MissingAdventDays", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Press &apos;R&apos; to retry, or &apos;X&apos; to exit..
        /// </summary>
        internal static string RetryMessage {
            get {
                return ResourceManager.GetString("RetryMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Merry Christmas for 2021! Welcome to the Advent of Code.
        ///You&apos;re minding your own business on a ship at sea when the overboard alarm goes off! You rush to see if you can help. Apparently, one of the Elves tripped and accidentally sent the sleigh keys flying into the ocean!
        ///
        ///Before you know it, you&apos;re inside a submarine the Elves keep ready for situations like this. It&apos;s covered in Christmas lights (because of course it is), and it even has an experimental antenna that should be able to track the keys if y [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string WelcomeMessage {
            get {
                return ResourceManager.GetString("WelcomeMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WELCOME TO ACTIVITY .
        /// </summary>
        internal static string WelcomeToActivityMessage {
            get {
                return ResourceManager.GetString("WelcomeToActivityMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WELCOME TO DAY .
        /// </summary>
        internal static string WelcomeToDayMessage {
            get {
                return ResourceManager.GetString("WelcomeToDayMessage", resourceCulture);
            }
        }
    }
}
